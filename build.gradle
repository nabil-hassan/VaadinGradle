plugins {
    id 'eclipse-wtp'
    id 'java'
    id 'war'
    id "org.akhikhl.gretty" version "1.4.0"
}


description = "Vaadin demo project"
group = 'net.example'
version = '1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
	widgetSet = "net.example.MyWidgetSet"
	widgetSetCacheDir = "${rootDir}/build/tmp/gwtCacheDir"
}

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
	compileOnly "com.vaadin:vaadin-client:$vaadinVersion"
	compileOnly "com.vaadin:vaadin-client-compiler:$vaadinVersion"

    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    compile "log4j:log4j:$log4jVersion"
    compile "com.vaadin:vaadin-push:$vaadinVersion"
    compile "com.vaadin:vaadin-server:$vaadinVersion"
    compile "com.vaadin:vaadin-themes:$vaadinVersion"
    compile "javax.servlet:javax.servlet-api:$servletApiVersion"
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.1'
}

// Tasks related to cleaning of Widget Set.
def cleanGeneratedWidgetSet() {
	def dir = new File("${rootDir}/src/main/webapp/VAADIN/widgetsets/")
	
	if (dir.exists()) {
		ant.delete (includeEmptyDirs: 'true') {
			fileset(dir: "${rootDir}/src/main/webapp/VAADIN/widgetsets/", includes: "**/*", defaultexcludes: "false")
		}
	}
}

clean {
    cleanGeneratedWidgetSet()
}

task cleanWidgetSet(description: 'Removes all generated source files associated with the project Vaadin widget set', 
                    group: 'build') << {
	cleanGeneratedWidgetSet()
}

// Tasks related to generation of Widget Set.
task createWidgetSetCacheDir(description: 'Creates a temporary content directory for Vaadin widget set generation', 
                             group: 'build') << {
	File dir = new File(project.widgetSetCacheDir)
	
	if (!dir.exists()) {
		dir.mkdirs()
	}
}

task generateWidgetSet(type: JavaExec, 
                       dependsOn: 'createWidgetSetCacheDir',
                       description: 'Generates the Vaadin widget set specified by property project.widgetset', 
                       group: 'build') {
    main = 'com.vaadin.tools.WidgetsetCompiler'
    
    classpath = sourceSets.main.compileClasspath + files('src/main/resources', 'src/main/java')

    args '-deploy', project.widgetSetCacheDir,
         '-extra', project.widgetSetCacheDir,
         '-localWorkers', '8',
         '-logLevel', 'INFO', 
         '-war', 'src/main/webapp/VAADIN/widgetsets', 
         project.widgetSet

	systemProperty "gwt.persistentunitcachedir", project.widgetSetCacheDir
	
	maxHeapSize = '512M'
}

task copyWidgetSetToInPlaceWebapp(type: Copy) {
    from 'src/main/webapp/VAADIN'
    into 'build/inplaceWebapp/VAADIN'
}

war.dependsOn('generateWidgetSet')

afterEvaluate {
     prepareInplaceWebApp.dependsOn('generateWidgetSet')
     prepareInplaceWebApp.finalizedBy copyWidgetSetToInPlaceWebapp  
}
